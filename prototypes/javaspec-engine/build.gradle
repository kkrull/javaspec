//JUnit TestEngine that is discovered at runtime and runs specs under JUnit Jupiter
plugins {
	id 'java-library'
	id 'com.adarshr.test-logger'
	id 'com.diffplug.spotless'
}

version '0.0.1'

dependencies {
	implementation project(':javaspec-api')
	implementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

	testImplementation 'org.assertj:assertj-core:3.22.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
	testImplementation 'org.junit.platform:junit-platform-testkit:1.8.2'
//  testRuntimeOnly project(':javaspec-engine-discovery-request-listener')
}

task printTestRuntimeClasspath() {
	doLast {
		println configurations.testRuntimeClasspath.asPath
	}
}

task testEngineWithJUnitConsole(type: JavaExec) {
	dependsOn ':javaspec-api:assemble'
	dependsOn assemble
	dependsOn compileTestJava
	description 'Use javaspec-engine to run its own specs in an external JUnit Console process'

	def engine_with_service_descriptor = jar.archivePath
	def test_sources = 'build/classes/java/test'
	def test_sources_dependencies = configurations.testRuntimeClasspath.asPath

	classpath = files('../lib/junit-platform-console-standalone-1.8.1.jar')
	args = [
		'--classpath=' + engine_with_service_descriptor,
		'--classpath=' + test_sources,
		'--classpath=' + test_sources_dependencies,
		'--include-engine=' + 'javaspec-engine',
		'--select-class=' + 'info.javaspec.engine.JavaSpecEngineTest'
	]

	doFirst {
		println 'Command Line Components:'
		commandLine.each { println it }
	}
}

test {
	useJUnitPlatform()

	//Show all output: the specs themselves *and* the TestEngine
	onOutput { _descriptor, TestOutputEvent engineEvent ->
		logger.lifecycle(engineEvent.message.trim())
	}
}

//https://github.com/radarsh/gradle-test-logger-plugin
testlogger {
	theme 'plain'
}
