require 'cucumber'
require 'cucumber/rake/task'
require 'rubygems/package'

desc 'Compile, run all tests, and run checkstyle'
task default: %w[java:test java:install cucumber java:checkstyle]


desc 'Clean everything'
task :clean => 'java:clean'


Cucumber::Rake::Task.new do |task|
  task.cucumber_opts = %w[
    --quiet
    --strict
    --tags 'not @wip'
  ]
end

namespace :cucumber do
  desc 'Run Cucumber scenarios tagged with @focus'
  task :focus do
    sh *%w[cucumber -t @focus]
  end
end


namespace :java do
  desc 'Perform static analysis on Java code'
  task :checkstyle do
    gradle %w[--stacktrace check]
  end

  desc 'Remove everything generated and compiled from Java code'
  task :clean do
    gradle %w[--stacktrace clean]
  end

  desc 'Compile Java sources'
  task :compile do
    gradle %w[--stacktrace build -x test]
  end

  desc 'Open cucumber-jvm report'
  task 'cucumber-report' do
    sh *%w[open console-runner-features/build/reports/cucumber/index.html]
  end

  desc 'Package and install java distributions, locally'
  task :install do
    #Cucumber options: https://github.com/cucumber/cucumber-java-skeleton#overriding-options
    gradle %w[--stacktrace installDist]
  end

  desc 'Run all tests on Java code'
  task :test do
    #Cucumber options: https://github.com/cucumber/cucumber-java-skeleton#overriding-options
    gradle %w[--stacktrace build]
  end

  def gradle(tasks)
    gradle_command =
      # https://docs.travis-ci.com/user/environment-variables/#default-environment-variables
      if ENV['CI']
        %w[./gradlew --console=plain]
      else
        %w[./gradlew]
      end

    sh *gradle_command + tasks
  end
end


namespace :distribution do
  desc 'Install the distribution to /usr/local'
  task :install do
    File.open distribution_file do |file|
      Gem::Package::TarReader.new file do |tar|
        tar.each do |tarfile|
          destination_file = File.join install_base_dir, tarfile.full_name
          extract_tar_entry! tarfile, destination_file
        end
      end
    end

    ln_s "#{install_dir}/bin/javaspec", link_file unless File.exist? link_file
    chmod 0755, link_file
  end

  desc 'Remove the distribution from /usr/local'
  task :uninstall do
    rm link_file if File.exist? link_file
    raise IOError.new "Expected #{install_dir} to be removed.  Run with rvmsudo?" if File.exist? link_file

    rm_rf install_dir, secure: true, verbose: true
    raise IOError.new "Expected #{install_dir} to be removed.  Run with rvmsudo?" if File.exist? install_dir
  end

  def distribution_file
    'console-runner/build/distributions/javaspec-2.0.0-SNAPSHOT.tar'
  end

  def extract_tar_entry!(tarfile, destination_file)
    if tarfile.directory?
      mkdir_p destination_file
    elsif tarfile.file?
      destination_directory = File.dirname(destination_file)
      mkdir_p destination_directory unless File.directory? destination_directory
      File.open destination_file, 'wb' do |f|
        f.write tarfile.read
      end
    end

    chmod tarfile.header.mode, destination_file
  end

  def install_dir
    File.join install_base_dir, 'javaspec-2.0.0-SNAPSHOT'
  end

  def install_base_dir
    '/usr/local/opt'
  end

  def link_file
    '/usr/local/bin/javaspec'
  end
end


namespace :jetbrains do
  desc 'Remove all project files from Jetbrains IDEs'
  task :reset do
    sh *%w[rm -Rf .idea]
    sh "find . -iname '*.iml' -print -exec rm -Rf {} +"
  end
end


namespace :travis do
  desc 'Run the linter on the Travis configuration'
  task :lint do
    sh *%w[travis lint]
  end
end
